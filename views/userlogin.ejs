<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GLOZIO</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.0/dist/sweetalert2.all.min.js"></script>
</head>
<style>
    @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');
    
    *{
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Montserrat', sans-serif;
    }
    
    body{
        background-color: rgb(249, 249, 249);
        /* background: linear-gradient(to right, #e2e2e2, #c9d6ff); */
        display: flex;
        /* align-items: center;
        justify-content: center; */
        flex-direction: column;
        height: 100vh;
    }
    
    .container {
    background-color: #ffffff;
    border-radius: 30px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
    position: relative; /* Set position to relative */
    overflow: hidden;
    width: 768px;
    max-width: 100%;
    min-height: 480px;
    margin-top: 70px;
    z-index: 1000; /* Set a higher z-index value */
}
    .container p{
        font-size: 14px;
        line-height: 20px;
        letter-spacing: 0.3px;
        margin: 20px 0;
    }
    
    .container span{
        font-size: 12px;
    }
    
    .container a{
        color: #333;
        font-size: 13px;
        text-decoration: none;
        margin: 15px 0 10px;
    }
    
    .container button{
        background-color: orange;
        color: #fff;
        font-size: 12px;
        padding: 10px 45px;
        border: 1px solid transparent;
        border-radius: 8px;
        font-weight: 600;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        margin-top: 10px;
        margin-bottom: 20px;
        cursor: pointer;
    }
    
    .container button:hover{
        background-color: #00a1ff;
    }
    
    .container button.hidden{
        background-color: transparent;
        border-color: #fff;
    }
    
    .container form{
        background-color: #ffffff;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 0 40px;
        height: 100%;
    }
    
    .container input{
        background-color: #eee;
        border: none;
        margin: 8px 0;
        padding: 10px 15px;
        font-size: 13px;
        border-radius: 8px;
        width: 100%;
        outline: none;
    }
    
    .form-container{
        position: absolute;
        top: 0;
        height: 100%;
        transition: all 0.6s ease-in-out;
    }
    
    .sign-in{
        left: 0;
        width: 50%;
        z-index: 2;
    }
    
    .container.active .sign-in{
        transform: translateX(100%);
    }
    
    .sign-up{
        left: 0;
        width: 50%;
        opacity: 0;
        z-index: 1;
        margin-bottom: 10px;
    }
    
    .container.active .sign-up{
        transform: translateX(100%);
        opacity: 1;
        z-index: 5;
        animation: move 0.6s;
    }
    
    @keyframes move{
        0%, 49.99%{
            opacity: 0;
            z-index: 1;
        }
        50%, 100%{
            opacity: 1;
            z-index: 5;
        }
    }
    
    .social-icons{
        margin: 20px 0;
    }
    
    .social-icons a{
        border: 1px solid #ccc;
        border-radius: 20%;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        margin: 0 3px;
        width: 40px;
        height: 40px;
    }
    
    .toggle-container{
        position: absolute;
        top: 0;
        left: 50%;
        width: 50%;
        height: 100%;
        overflow: hidden;
        transition: all 0.6s ease-in-out;
        border-radius: 150px 0 0 100px;
        z-index: 1000;
    }
    
    .container.active .toggle-container{
        transform: translateX(-100%);
        border-radius: 0 150px 100px 0;
    }
    
    .container.active .form-container.sign-up {
        transform: translateX(100%);
    }
    
    .container.active .form-container.sign-in {
        transform: translateX(100%);
    }
    
    
    .toggle{
        background-color: linear-gradient(to left, #ffc934, #414141);
        height: 100%;
        background: linear-gradient(to right, #646363 , #ffc934 );
        color: #fff;
        position: relative;
        left: -100%;
        height: 100%;
        width: 200%;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
    }
    
    .container.active .toggle{
        transform: translateX(50%);
    }
    
    .toggle-panel{
        position: absolute;
        width: 50%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 0 30px;
        text-align: center;
        top: 0;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
    }
    
    .toggle-left{
        transform: translateX(-200%);
    }
    
    .container.active .toggle-left{
        transform: translateX(0);
    }
    
    .toggle-right{
        right: 0;
        transform: translateX(0);
    }
    
    .container.active .toggle-right{
        transform: translateX(200%);
    }
    .navbar {
    background-color: rgb(37, 36, 37);
    height: 70px;
    position: relative; /* Set position to relative */
    z-index: 1000; /* Set a higher z-index value */
}
    .navbar-brand{
        color: white;
        font-size: 30px;
        font-family: 'Montserrat', sans-serif;
        font-weight: 600;
    }
    .navbar-brand img{
      margin-top: 7px;
    }
    .bn32 {
  border-color: #ffa50b;
  padding: 0.4em 1.8em; /* Decrease padding */
  cursor: pointer;
  font-size: 0.9em; /* Decrease font size */
  color: #ff951c;
  background-image: linear-gradient(45deg, transparent 50%, #000000 50%);
  background-position: 25%;
  background-size: 400%;
  -webkit-transition: background 500ms ease-in-out, color 500ms ease-in-out;
  transition: background 500ms ease-in-out, color 500ms ease-in-out;
}

.bn32:hover {
  color: #ff8121;
  background-position: 100%;
}
input.error {
    border: 2px solid red;
}
.error-message {
    color: red;
    font-size: 14px;
    margin-top: 2px;
}
.toggle-password {
    position: absolute;
    right: 10px;
    top: 64%;
    transform: translateY(-50%);
    cursor: pointer;
}

.toggle-password i {
    cursor: pointer;
}
.toggle-Confirmpassword {
    position: absolute;
    right: 10px;
    top: 75%;
    transform: translateY(-50%);
    cursor: pointer;
}
.toggle-Confirmpassword i {
    cursor: pointer;
}
.toggle-signinpassword {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
}
.toggle-signinpassword i {
    cursor: pointer;
}
.password-container {
    position: relative;
    width: 100%;
}

.password-input {
    padding-right: 40px; /* Adjust this value based on the width of your icon */
}

.toggle-password,
.toggle-Confirmpassword {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 10px; /* Adjust this value based on the position you want the icon to be */
    cursor: pointer;
}

.toggle-password i,
.toggle-Confirmpassword i {
    pointer-events: none; /* Ensure clicks go through to the input */
}
body,
canvas {
  position: absolute;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}
    </style>
    
<body>
    <div class="gradient">

   
    <nav class="navbar navbar-light ">
        <div class="container-fluid">
          <a class="navbar-brand" href="/">
            <img src="/img/Gloziologo.png" alt="" width="30" height="24" class="d-inline-block align-text-top">
            GLOZIO
          </a>
          <a href="/adminlogin"><button class="bn-32 bn32">Admin</button></a>
        </div>
      </nav>

      <div class="container" id="container">
        <div class="form-container sign-up">
            <form action="/api/user/register" method="POST">
                <h2>Create Account</h2>
                <div class="social-icons">
                    <a href="/auth/google" class="icon"><i class="fa-brands fa-google -g"></i></a>
                </div>
                <span>or use your email for registration</span>
                <input type="text" placeholder="Name" name="name">
                <input type="email" placeholder="Email" name="email">
                <div class="password-container">
                    <input type="password" placeholder="Password" name="password" class="password-input">
                    <span class="toggle-password" id="togglePassword">
                        <i class="fas fa-eye" aria-hidden="true"></i>
                    </span>
                </div>
                <div class="password-container">
                    <input type="password" placeholder="Confirm Password" name="confirmPassword" class="password-input" id="confirmPassword">
                    <span class="toggle-Confirmpassword" id="toggleConfirmPassword">
                        <i class="fas fa-eye" aria-hidden="true"></i>
                    </span>
                </div>
                <% if (typeof errorMessage !== 'undefined') { %>
                  <span class="error-message"><%= errorMessage %></span>
                <% } %>
                <% if (locals.success) { %>
                    <p class="success-message"><%= locals.success %></p>
                <% } %>
                <button type="submit" onclick="return validatePassword()">Sign Up</button>
            </form>
        </div>
        <div class="form-container sign-in">
            <form action="/api/user/login" method="post">
                <h1>Sign In</h1>
                <div class="social-icons">
                    <a href="/auth/google" class="icon"><i class="fa-brands fa-google -g"></i></a>
                </div>
                <span>or use your email password</span>
                <input type="email" placeholder="Email" name="email">
                <div class="password-container">
                    <input type="password" placeholder="Password" name="password" class="password-input" id="signInPassword">
                    <span class="toggle-signinpassword" id="toggleSignInPassword">
                        <i class="fas fa-eye" aria-hidden="true"></i>
                    </span>
                </div>
                <a href="/api/forgot-password">Forgot password?</a>
                <button type="submit">Sign In</button>
            </form>
        </div>
        <div class="toggle-container">
            <div class="toggle">
                <div class="toggle-panel toggle-left">
                    <h1>Welcome to Glozio</h1>
                    <p>Enter your personal details </p>
                    <button class="hidden" id="login">Sign In</button>
                </div>
                <div class="toggle-panel toggle-right">
                    <h1>Welcome to Glozio</h1>
                    <p>Enter your personal details </p>
                    <button class="hidden" id="register">Sign Up</button>
                </div>
            </div>
        </div>
    </div>
</div>

      <script>
        const urlParams = new URLSearchParams(window.location.search);
        const message = urlParams.get('msg'); // Change 'message' to 'msg'
        if (typeof message !== 'undefined') {
            if (message.includes('passw')) {
                Swal.fire({
                    icon: "failure",
                    title: "Password Wrong",
                    confirmButtonText: "Ok",
                });
                window.history.replaceState({}, document.title, window.location.pathname);
            }else if(message.includes('blocked')){
                Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Something went wrong!",
                footer: 'Your account has been blocked.'
                });
                window.history.replaceState({}, document.title, window.location.pathname);
            }
        }
    </script>
    <script>
     function validatePassword() {
    var password = document.getElementById("password").value;
    var confirmPassword = document.getElementById("confirmPassword").value;

    // Check if passwords match
    if (password !== confirmPassword) {
        Swal.fire({
            icon: "error",
            title: "Password doesn't match",
            confirmButtonText: "Ok",
        });
        return false;
    }

    // Check if password meets strength requirements
    var strongRegex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})");
    if (!strongRegex.test(password)) {
        Swal.fire({
            icon: "error",
            title: "Password must contain at least one uppercase letter, one lowercase letter, one number, one special character, and be at least 8 characters long",
            confirmButtonText: "Ok",
        });
        return false;
    }

    return true;
}


    </script>
      
      <script>
        const container = document.getElementById('container');
  const registerBtn = document.getElementById('register');
  const loginBtn = document.getElementById('login');
  
  registerBtn.addEventListener('click', () => {
      container.classList.add("active");
  });
  
  loginBtn.addEventListener('click', () => {
      container.classList.remove("active");
  });
  
    </script>
<script>
    const togglePasswordIcons = document.querySelectorAll('.toggle-password');
    togglePasswordIcons.forEach(icon => {
        icon.addEventListener('click', function() {
            const passwordInput = this.previousElementSibling;
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            // Toggle eye icon
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });
    });
    const togglePasswordIcon = document.querySelectorAll('.toggle-Confirmpassword');
    togglePasswordIcon.forEach(icon => {
        icon.addEventListener('click', function() {
            const passwordInput = this.previousElementSibling;
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            // Toggle eye icon
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });
    });
    const togglePassword = document.querySelectorAll('.toggle-signinpassword');
    togglePassword.forEach(icon => {
        icon.addEventListener('click', function() {
            const passwordInput = this.previousElementSibling;
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            // Toggle eye icon
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });
    });
</script>

<script>
    // init
var maxx = document.body.clientWidth;
var maxy = document.body.clientHeight;
var halfx = maxx / 2;
var halfy = maxy / 2;
var canvas = document.createElement("canvas");
document.body.appendChild(canvas);
canvas.width = maxx;
canvas.height = maxy;
var context = canvas.getContext("2d");
var dotCount = 200;
var dots = [];
// create dots
for (var i = 0; i < dotCount; i++) {
  dots.push(new dot());
}

// dots animation
function render() {
  context.fillStyle = "#000000";
  context.fillRect(0, 0, maxx, maxy);
  for (var i = 0; i < dotCount; i++) {
    dots[i].draw();
    dots[i].move();
  }
  requestAnimationFrame(render);
}

// dots class
// @constructor
function dot() {
  
  this.rad_x = 2 * Math.random() * halfx + 1;
  this.rad_y = 1.2 * Math.random() * halfy + 1;
  this.alpha = Math.random() * 360 + 1;
  this.speed = Math.random() * 100 < 50 ? 1 : -1;
  this.speed *= 0.1;
  this.size = Math.random() * 5 + 1;
  this.color = Math.floor(Math.random() * 256);
  
}

// drawing dot
dot.prototype.draw = function() {
  
  // calc polar coord to decart
  var dx = halfx + this.rad_x * Math.cos(this.alpha / 180 * Math.PI);
  var dy = halfy + this.rad_y * Math.sin(this.alpha / 180 * Math.PI);
  // set color
  context.fillStyle = "rgb(" + this.color + "," + this.color + "," + this.color + ")";
  // draw dot
  context.fillRect(dx, dy, this.size, this.size);
  
};

// calc new position in polar coord
dot.prototype.move = function() {
  
  this.alpha += this.speed;
  // change color
  if (Math.random() * 100 < 50) {
    this.color += 1;
  } else {
    this.color -= 1;
  }
  
};

// start animation
render();
</script>
      
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
</body>
</html>