<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification Form</title>
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #dbdbdb;
            margin: 0;
            padding: 0;
        }
          
        .container {
            background: #fff;
            padding: 30px 65px;
            border-radius: 12px;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            position: relative; /* Added */
        }

        .container header {
            height: 65px;
            width: 65px;
            background: #4070f4;
            color: #fff;
            font-size: 2.5rem;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container h4 {
            font-size: 1.25rem;
            color: #333;
            font-weight: 500;
            margin-top: 20px;
        }

        form {
            margin-top: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        input[type="number"] {
            height: 45px;
            width: 200px;
            border-radius: 6px;
            outline: none;
            font-size: 1.125rem;
            text-align: center;
            border: 1px solid #ddd;
            margin-bottom: 20px;
        }

        button {
            width: 200px;
            color: #fff;
            font-size: 1rem;
            border: none;
            padding: 9px 0;
            cursor: pointer;
            border-radius: 6px;
            background: #6e93f7;
            transition: all 0.2s ease;
        }

        button.active {
            background: #4070f4;
        }

        button:hover {
            background: #0e4bf1;
        }

        /* Added */
        #resendBtn {
            width: 150px;
            font-size: 0.9rem;
            margin-top: 10px;
        }

        #timerDisplay {
            position: absolute;
            top: 20px;
            right: 20px;
            font-size: 1rem;
            color: #555;
        }
    </style>
</head>
<body>

    <div class="container">
        <header>
            <i class="bx bxs-check-shield"></i>
        </header>
        <h4>Enter OTP Code</h4>
        <form action="/api/otp" method="post" id="otpForm">
            <input name="otp" type="number" placeholder="Enter OTP" required/>
            <button type="submit">Verify OTP</button>
            <button type="button" id="resendBtn">Resend OTP</button>
            <div id="timerDisplay"></div> 
        </form>
    </div>
      
  
<script>
    // Function to update the timer display
    function updateTimerDisplay(seconds) {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = seconds % 60;
        document.getElementById('timerDisplay').innerText = `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;
    }

    // Function to start the timer
    function startTimer(duration, callback) {
        let timer = duration;
        const interval = setInterval(() => {
            timer--;
            updateTimerDisplay(timer);
            if (timer <= 0) {
                clearInterval(interval);
                callback();
            }
        }, 1000);
    }

    // Resend OTP button click event handler
    document.getElementById('resendBtn').addEventListener('click', async () => {
    try {
        const response = await fetch('/api/resendOTP', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            // No need to send any data in the request body
        });
        if (response.ok) {
            const responseData = await response.json();
            alert(responseData.message); // Show success message
        } else {
            const errorData = await response.json();
            alert(errorData.message); // Show error message
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while resending OTP. Please try again.');
    }
});

    // Start the timer when the page loads
    window.addEventListener('load', () => {
        startTimer(30, () => {
            // Handle timer expiration (e.g., disable the resend button)
            document.getElementById('resendBtn').disabled = true;
            console.log('OTP expired'); 
        });
    });

    // Function to calculate remaining time
    function calculateRemainingTime(timestamp) {
        const currentTime = Date.now();
        const elapsedTime = (currentTime - timestamp) / 1000; // Convert to seconds
        const remainingTime = Math.max(0, 30 - elapsedTime); // Maximum time is 30 seconds
        return formatTime(remainingTime);
    }

    // Function to format time
    function formatTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = Math.floor(seconds % 60);
        return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;
    }
</script>

</body>
</html>
